------------- src/apis/APIs.js -------------

This module contains various API functions for interacting with the backend.

1. Function: UserAuthenticationHandler
   Description: Handles user authentication by making a call to the User Login API.
   Parameters:
      - action: The action to be performed.
      - data: Data required for the action.
   Returns: data

2. Function: UserCreateHandler
   Description: Handles user creation by invoking the User Create API.
   Parameters:
      - action: The action to be performed.
      - data: Data required for user creation.
   Returns: data

3. Function: checkCookieHandler
   Description: Verifies if cookies are correctly passed to the backend API.
   Parameters:
      - action: The action to be performed.
      - data: Data to be checked against the cookie.
   Returns: data

4. Function: GetuserProfile
   Description: Retrieves a user's profile data based on the username.
   Parameters:
      - userName: The username of the user.
   Returns: Data containing the user's profile information.

5. Function: updateUserProfileHandler
   Description: Updates a user's profile information.
   Parameters:
      - action: The action to be performed.
      - data: Updated user profile data.
   Returns: data

6. Function: CreateServiceOrProductHandler
   Description: Allows the current user to create a product or service.
   Parameters:
      - action: The action to be performed.
      - data: Data for creating the product or service.
   Returns: data

7. Function: UpdateServiceOrProductHandler
   Description: Allows the current user to update a product or service.
   Parameters:
      - action: The action to be performed.
      - data: Updated data for the product or service.
   Returns: data

8. Function: DeleteServiceOrProductHandler
   Description: Allows the current user to delete a product or service.
   Parameters:
      - action: The action to be performed.
      - data: Data for deleting the product or service.
   Returns: data

9. Function: GetuserServiceHandler
   Description: Retrieves services associated with a user.
   Parameters:
      - userID: The ID of the user.
   Returns: Data containing user services.


10. Function: GetuserProductHandler
    Description: Retrieves products associated with a user.
    Parameters:
       - userID: The ID of the user.
    Returns: Data containing user products.


11. Function: CreateEventHandler
    Description: Allows the current user to create an event.
    Parameters:
       - action: The action to be performed.
       - data: Data for creating the event.
    Returns: data
    Note: As of 14.05.2024, it is not fully implemented.


12. Function: UpdateEventHandler
    Description: Allows the current user to update an event.
    Parameters:
       - action: The action to be performed.
       - data: Updated data for the event.
    Returns: data
    Note: As of 14.05.2024, it is not fully implemented.


13. Function: DeleteEventHandler
    Description: Allows the current user to delete an event.
    Parameters:
       - action: The action to be performed.
       - data: Data for deleting the event.
    Returns: data
    Note: As of 14.05.2024, it is not fully implemented.


14. Function: GetuserEventHandler
    Description: Retrieves events associated with a user.
    Parameters:
       - userID: The ID of the user.
    Returns: Data containing user events.
    Note: As of 14.05.2024, it is not fully implemented.


15. Function: CreateStallHandler
    Description: Allows the current user to create a stall.
    Parameters:
       - action: The action to be performed.
       - data: Data for creating the stall.
    Returns: data


16. Function: UpdateStallHandler
    Description: Allows the current user to update a stall.
    Parameters:
       - action: The action to be performed.
       - data: Updated data for the stall.
    Returns: data


17. Function: DeleteStallHandler
    Description: Allows the current user to delete a stall.
    Parameters:
       - action: The action to be performed.
       - data: Data for deleting the stall.
    Returns: data


18. Function: GetuserStallHandler
    Description: Retrieves stalls associated with a user.
    Parameters:
       - id: The ID of the user.
    Returns: Data containing user stalls.


19. Function: GetStallBYIDHandler
    Description: Retrieves a stall by its ID.
    Parameters:
       - id: The ID of the stall.
    Returns: Data containing the stall information.


20. Function: GetuserServiceOrProductForStallHandler
    Description: Retrieves services or products associated with a stall.
    Parameters: data
    Returns: Data containing services or products for the stall.


21. Function: AddaServiceOrProductTOStallHandler
    Description: Allows the current user to add a service or product to a stall.
    Parameters:
       - action: The action to be performed.
       - data: Data for adding the service or product to the stall.
    Returns: data


22. Function: RemoveaServiceOrProductTOStallHandler
    Description: Allows the current user to remove a service or product from a stall.
    Parameters:
       - action: The action to be performed.
       - data: Data for removing the service or product from the stall.
    Returns: data


23. Function: getStallServiesORProductsHandler
    Description: Retrieves services or products associated with a stall.
    Parameters:
       - action: The action to be performed.
       - data: Data for retrieving services or products for the stall.
    Returns: Data containing services or products for the stall.


24. Function: getStallforEventHandler
    Description: Retrieves stalls for an event.
    Parameters: data
    Returns: Data containing stalls for the event.


25. Function: getServiceorproductforEventHandler
    Description: Retrieves services or products for an event.
    Parameters:
       - id: The ID of the event.
    Returns: Data containing services or products for the event.


26. Function: ScannedVisitorStallCreate
    Description: Adds a visited stall for a particular event when a visitor is scanned.
    Parameters:
       - action: The action to be performed.
       - data: Data for adding the visited stall.
    Returns: data
    Note: Purpose is to track recent visits and visited stalls.


27. Function: ScannedUserStallCreate
    Description: Adds visitor details for a particular event when a visitor is scanned.
    Parameters:
       - action: The action to be performed.
       - data: Data for adding the visitor details stall.
    Returns: data
    Note: Purpose is for the stall user dashboard view.


28. Function: GetVisitorDetailsForEventsHandler
    Description: Retrieves visitor details for a specific event.
    Parameters:
       - action: The action to be performed.
       - data: Data for retrieving visitor details.
    Returns: Data containing visitor details for the event.


29. Function: BookMarkAStallHandler
    Description: Allows a visitor to bookmark a particular stall for an event.
    Parameters:
       - action: The action to be performed.
       - data: Data for bookmarking the stall.
    Returns: data


30. Function: NewServiedeorProduct
    Description: Updates a bookmark for a visitor.
    Parameters:
       - action: The action to be performed.
       - data: Data for updating the bookmark.
    Returns: data
    Note: Purpose is to update bookmarks.


31. Function: GetDashboardVisitorsForEvents
    Description: Retrieves dashboard data for a particular event, limited to the current user's leads.
    Parameters:
       - action: The action to be performed.
       - data: Data for retrieving dashboard visitors.
    Returns: Data containing dashboard visitors for the event, limited to the current user's leads.


32. Function: LeadCreateHandler
    Description: Updates a lead for a visitor.
    Parameters:
       - action: The action to be performed.
       - data: Data for updating the lead.
    Returns: data


33. Function: getSubcriptionsHandler
    Description: Retrieves subscription users.
    Parameters:
       - id: The ID of the subscription.
    Returns: Data containing subscription users.


34. Function: getUserDetailsForleadsHandler
    Description: Retrieves all leads for a stall user.

    Parameters:
       - id: The ID of the stall user.
    Returns: Data containing all leads for the stall user.


---------------- src/apis/APIs.js End ----------------





